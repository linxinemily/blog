# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Build and Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive  # 確保 submodule 被遞歸下載

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Initialize Hugo Modules
        run: |
          hugo mod get -u
          hugo mod tidy

      - name: Build
        run: hugo --minify

      # 其他步驟，例如部署

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Verify deployment
        run: |
          if [ "${{ steps.deployment.outputs.page_url }}" != "" ]; then
            echo "Deployment successful: ${{ steps.deployment.outputs.page_url }}"
          else
            echo "Deployment failed"
            exit 1
          fi
